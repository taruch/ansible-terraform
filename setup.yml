---


controller_credentials:
  - name: "Terraform State Credential"
    description: !unsafe ''
    credential_type: "Terraform backend configuration"
    organization: "Default"
    inputs:
      configuration: >
        bucket: "aap-tf-bucket-5abacb29-72ff-48ac-afeb-ec4f3cf6f0d6"
        key: "ec2-instance/terraform.tfstate"
        region: "us-east-2"
        access_key: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
        secret_key: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"
  
  - name: "Quay TRUCH"
    description: !unsafe ''
    credential_type: "Container Registry"
    organization: "Default"
    inputs:
      host: quay.io
      password: ''
      username: truch

controller_execution_environments:
  - name: "Terraform EE"
    description: ""
    image: "quay.io/truch/terraform_ee:1.2"
    pull: "missing"
    credential: "Quay TRUCH"

controller_projects:
  - name: "Ansible Terraform"
    description: !unsafe ''
    organization: "Default"
    scm_type: "git"
    scm_url: "https://github.com/taruch/ansible-terraform.git"
    scm_branch: ""
    scm_clean: false
    scm_delete_on_update: false
    scm_update_on_launch: false
    scm_update_cache_timeout: "0"
    scm_refspec: ""
    allow_override: false
    update_project: false
    timeout: "0"


controller_inventories:
  - name: "Terraform Inventory"
    description: !unsafe ''
    organization: "Default"
    prevent_instance_group_fallback: False


controller_inventory_sources:
  - name: "Terraform State Source"
    description: !unsafe ''
    organization: "Default"
    source: "terraform"
    limit: ""
    source_path: ""
    source_vars:
      backend_type: s3
      compose:
        ansible_host: public_ip
      groups:
        cloud_aws: true
        os_linux: tags.blueprint.startswith('rhel')
      hostnames:
      - tag:Name
      keyed_groups:
      - key: tags.purpose
        prefix: purpose
    inventory: "Terraform Inventory"
    update_on_launch: "False"
    overwrite: "False"
    credential: "Terraform State Credential"


controller_templates:
  - name: "TERRAFORM / Create S3 Bucket for State File"
    description: !unsafe 'Create S3 Bucket for Terraform State File'
    organization: "Default"
    project: "Ansible Terraform"
    inventory: "Demo Inventory"
    playbook: "create_bucket.yml"
    scm_branch: ""
    forks: 0
    limit: ""
    verbosity: 0
    job_type: "run"
    job_slice_count: 1
    use_fact_cache: false
    credentials:
      - "AWS"
    allow_simultaneous: false
    ask_scm_branch_on_launch: false
    ask_diff_mode_on_launch: false
    ask_tags_on_launch: false
    ask_skip_tags_on_launch: false
    ask_job_type_on_launch: false
    ask_verbosity_on_launch: false
    ask_variables_on_launch: false
    ask_inventory_on_launch: false
    ask_limit_on_launch: false
    ask_credential_on_launch: false
    ask_execution_environment_on_launch: false
    ask_labels_on_launch: false
    ask_forks_on_launch: false
    ask_job_slice_count_on_launch: false
    ask_timeout_on_launch: false
    ask_instance_groups_on_launch: false
    extra_vars: ""
    job_tags: ""
    force_handlers: false
    skip_tags: ""
    start_at_task: ""
    timeout: 0
    custom_virtualenv: ""
    host_config_key: ""
    survey_enabled: false
    become_enabled: false
    diff_mode: false
    webhook_service: ""
    prevent_instance_group_fallback: false

  - name: "TERRAFORM / Deploy"
    description: !unsafe ''
    organization: "Default"
    project: "Ansible Terraform"
    inventory: "Demo Inventory"
    playbook: "terraform_init.yml"
    scm_branch: ""
    forks: 0
    limit: ""
    verbosity: 0
    job_type: "run"
    job_slice_count: 1
    use_fact_cache: false
    credentials:
      - "AWS"
    allow_simultaneous: false
    ask_scm_branch_on_launch: false
    ask_diff_mode_on_launch: false
    ask_tags_on_launch: false
    ask_skip_tags_on_launch: false
    ask_job_type_on_launch: false
    ask_verbosity_on_launch: false
    ask_variables_on_launch: false
    ask_inventory_on_launch: false
    ask_limit_on_launch: false
    ask_credential_on_launch: false
    ask_execution_environment_on_launch: false
    ask_labels_on_launch: false
    ask_forks_on_launch: false
    ask_job_slice_count_on_launch: false
    ask_timeout_on_launch: false
    ask_instance_groups_on_launch: false
    extra_vars:
      aws_region: us-east-2
    job_tags: ""
    force_handlers: false
    skip_tags: ""
    start_at_task: ""
    timeout: 0
    custom_virtualenv: ""
    host_config_key: ""
    become_enabled: false
    diff_mode: false
    webhook_service: ""
    prevent_instance_group_fallback: false
    execution_environment: "Terraform EE"
    survey_enabled: true
    survey:
      name: ''
      description: ''
      spec:
        - question_name: How many EC2 instances to create?
          question_description: Specify the number of EC2 instances to create (1-3)
          type: multiplechoice
          variable: instance_count
          default: 1
          choices:
            - 1
            - 2
            - 3
          required: true

controller_workflows:
  - name: "TERRAFORM / Deploy and Inventory Sync"
    description: !unsafe ''
    organization: "Default"
    simplified_workflow_nodes:
      - identifier: "Terraform Inventory"
        workflow_job_template: "TERRAFORM / Deploy and Inventory Sync"
        unified_job_template: "Terraform State Source"
        limit: ""
        organization: "Default"
        all_parents_must_converge: "False"
      - identifier: "Terraform Deploy"
        workflow_job_template: "TERRAFORM / Deploy and Inventory Sync"
        unified_job_template: "TERRAFORM / Deploy"
        limit: ""
        organization: "Default"
        all_parents_must_converge: "False"
        always_nodes:
          - "Terraform Inventory"
      - identifier: "Terraform Project Sync"
        workflow_job_template: "TERRAFORM / Deploy and Inventory Sync"
        unified_job_template: "Ansible Terraform"
        limit: ""
        organization: "Default"
        all_parents_must_converge: "False"
        always_nodes:
          - "Terraform Deploy"
    ask_variables_on_launch: "False"
    allow_simultaneous: "False"
    scm_branch: ""
    limit: ""
    ask_limit_on_launch: false
    ask_inventory_on_launch: false
    webhook_service: ""
    extra_vars: ""
    survey_enabled: false


...
